[{"C:\\webCourse\\L25\\movie-app\\src\\index.js":"1","C:\\webCourse\\L25\\movie-app\\src\\App.js":"2","C:\\webCourse\\L25\\movie-app\\src\\reportWebVitals.js":"3","C:\\webCourse\\L25\\movie-app\\src\\model\\Actor.js":"4","C:\\webCourse\\L25\\movie-app\\src\\pages\\ActorPage.js":"5","C:\\webCourse\\L25\\movie-app\\src\\components\\ActorCard\\ActorCard.js":"6","C:\\webCourse\\L25\\movie-app\\src\\model\\movie.js":"7"},{"size":547,"mtime":1609244735949,"results":"8","hashOfConfig":"9"},{"size":271,"mtime":1609404193272,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":653,"mtime":1609499395197,"results":"12","hashOfConfig":"9"},{"size":3440,"mtime":1609501928527,"results":"13","hashOfConfig":"9"},{"size":717,"mtime":1609496436306,"results":"14","hashOfConfig":"9"},{"size":663,"mtime":1609501946775,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"zxlgsr",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\webCourse\\L25\\movie-app\\src\\index.js",[],["33","34"],"C:\\webCourse\\L25\\movie-app\\src\\App.js",[],"C:\\webCourse\\L25\\movie-app\\src\\reportWebVitals.js",[],"C:\\webCourse\\L25\\movie-app\\src\\model\\Actor.js",[],"C:\\webCourse\\L25\\movie-app\\src\\pages\\ActorPage.js",["35"],"\r\nimport axios from 'axios';\r\nimport { useEffect, useState } from 'react';\r\nimport { Container, Form, Row } from 'react-bootstrap';\r\nimport ActorCard from '../components/ActorCard/ActorCard';\r\nimport Actor from '../model/Actor';\r\nimport Movie from '../model/movie';\r\n\r\nimport './ActorPage.css';\r\n\r\n\r\nfunction ActorsPage(){\r\n\r\nconst [actorsData,setActorsData] = useState([]);\r\nconst [actorText ,setActorText] = useState(\"\");\r\nconst [moviesData,setMoviesData] = useState([]);\r\n\r\n\r\nuseEffect ( ()=> {\r\n      axios.get(\"actors.json\").then(res => setActorsData (res.data.map(singleActor => new Actor (singleActor)) ))\r\n})\r\n\r\nuseEffect ( ()=> {\r\n      axios.get(\"movies.json\").then(res => setMoviesData (res.data.map(singleMovie => new Movie (singleMovie)) ))\r\n})\r\n\r\n\r\n\r\n// const actor1 = new Actor (\"Brad\",\"Pitt\",\"https://m.media-amazon.com/images/M/MV5BMjA1MjE2MTQ2MV5BMl5BanBnXkFtZTcwMjE5MDY0Nw@@._V1_UX214_CR0,0,214,317_AL_.jpg\", \"https://www.imdb.com/name/nm0000093/\",57)\r\n// const actor2 = new Actor ( \"Daniel\", \"Day-Lewis\",\r\n// \"https://m.media-amazon.com/images/M/MV5BMjE2NDY2NDc1Ml5BMl5BanBnXkFtZTcwNjAyMjkwOQ@@._V1_UY317_CR13,0,214,317_AL_.jpg\" , \r\n//       \"https://www.imdb.com/name/nm0000358/\" ,63)\r\n// const actor3 = new Actor ( \"Gal\", \"Gadot\",\r\n// \"https://m.media-amazon.com/images/M/MV5BMjUzZTJmZDItODRjYS00ZGRhLTg2NWQtOGE0YjJhNWVlMjNjXkEyXkFqcGdeQXVyMTg4NDI0NDM@._V1_UY317_CR51,0,214,317_AL_.jpg\" , \r\n//       \"https://www.imdb.com/name/nm2933757/\" ,40)\r\n      \r\n// const [actorsData, setActorsData] = useState([actor1, actor2, actor3] );\r\n\r\n\r\n\r\nfunction FilterActors (e){\r\n      setActorText(e.target.value);\r\n}\r\n                                                     \r\n \r\n//filtering actors data\r\nconst filteredActores = actorsData.filter(actor => actor.fname.toLowerCase().includes( actorText.toLowerCase()) ||  actor.lname.toLowerCase().includes( actorText.toLowerCase())  )\r\n// Converting data (state + props) into presentation (jsx)\r\nconst actorGllery =filteredActores.map((item, index) => <ActorCard\r\n                                            key= {index}                                        \r\n                                            fname ={item.fname} \r\n                                            lname = {item.lname}\r\n                                            imageUrl = {item.imageUrl}  \r\n                                            imdbUrl= {item.imdbUrl}\r\n                                            age = {item.age}  \r\n                                        /> )\r\n\r\nconst moviesGllery =moviesData.map((item, index) => <ActorCard\r\n                                        key= {index}                                        \r\n                                        fname ={item.movieName} \r\n                                        lname = {item.length}\r\n                                        imageUrl = {item.poster}  \r\n                                        imdbUrl= {item.director}\r\n                                        age = {item.stars}  \r\n                                    /> ) \r\n\r\n                                      \r\nreturn (\r\n<Container className= \"p-actors\">\r\n<Form.Group >\r\n    <Form.Control  value = {actorText} onChange= {FilterActors } as=\"textarea\" className= \"p-actors-search\" placeholder= \"Search\" />\r\n  </Form.Group>\r\n    <Row className= \"flex\">\r\n        \r\n    {/* {actorGllery} */}\r\n    {moviesGllery}\r\n    \r\n    </Row>\r\n</Container>\r\n\r\n)\r\n\r\n}\r\n\r\nexport default ActorsPage;\r\n","C:\\webCourse\\L25\\movie-app\\src\\components\\ActorCard\\ActorCard.js",[],["36","37"],"C:\\webCourse\\L25\\movie-app\\src\\model\\movie.js",[],{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":49,"column":7,"nodeType":"44","messageId":"45","endLine":49,"endColumn":18},{"ruleId":"38","replacedBy":"46"},{"ruleId":"40","replacedBy":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"no-unused-vars","'actorGllery' is assigned a value but never used.","Identifier","unusedVar",["48"],["49"],"no-global-assign","no-unsafe-negation"]